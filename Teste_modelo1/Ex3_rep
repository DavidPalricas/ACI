# Mapa de registos
# n_even: $t0
# n_odd: $t1
# p1: $t2
# p2: $t4 

  .data
  .eqv N,3
  .eqv read_int,5
  .eqv print_int10,1
a: .space N

ba: .space N

   .text
   .globl main
   
main: li $t0,0 #n_even
      li $t1,0 #n_odd
      
      la $t2,a #p1 = a
     
      
      addiu $t3,$t2,N
      
for1: bge $t2,$t3,end_for1

       li $v0,read_int
       syscall
       
       sb $v0,0($t2) #*p1 = read_int
       
       addiu $t2,$t2,1
       
       j for1
       
end_for1:  la $t2,a #pl1= a
           la $t4,ba #p2 = b
           addiu $t3,$t2,N
           
for2:  bge $t2,$t3,end_for2
       lb $t5,0($t2) #*p1
       rem $t6,$t5,2
       lb $t7,0($t4)#*p2
       
if:    beqz $t6,else
       sb $t5,0($t4)#*pl = p*p2
       addi $t4,$t4,1 #p2++
     
       
       
       addi $t1,$t1,1 #n_odd++
       
       j  end_if
       
else: addi $t0,$t0,1

end_if: addiu $t2,$t2,1
        j for2
        
end_for2: la $t4,ba #p2 = b
          addu $t5,$t4,$t1
          
for3: bge $t4,$t5,end_for3

      lb $t7,0($t4)#*p2
      
      move $a0,$t7
      li $v0,print_int10
      syscall# print_int10(*p2)
      
      addiu $t4,$t4,1
      j for3
      
end_for3: jr $ra

       
       
       
       

      
      
   
